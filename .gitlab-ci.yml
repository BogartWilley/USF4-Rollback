workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"

stages:
  - build
  - upload

.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

# See https://docs.gitlab.com/ee/user/project/releases/release_fields.html#use-a-generic-package-for-attaching-binaries
variables:
  PACKAGE_VERSION: "0.0.1"
  ZIP_PACKAGE: "${CI_PROJECT_NAME}-${PACKAGE_VERSION}-win32.zip"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${PACKAGE_VERSION}"

build-job:
  stage: build
  extends:
  - .shared_windows_runners
  script:
    - cmake.exe --build build --config Release --target package
  before_script:
    - If (!(test-path vcpkg-cache)) { mkdir -p vcpkg-cache }
    - $env:VCPKG_DEFAULT_BINARY_CACHE="$PWD\vcpkg-cache"
    - >
        cmake.exe
        -B build
        -A Win32
        -DCMAKE_TOOLCHAIN_FILE:FILEPATH="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"
        -DCPACK_GENERATOR="ZIP"
        -DX_VCPKG_APPLOCAL_DEPS_INSTALL:BOOL="True"
  cache:
    - key:
        files:
          - vcpkg.json
          - vcpkg-configuration.json
      paths:
        - vcpkg-cache
  artifacts:
    paths:
      - "./build/${ZIP_PACKAGE}"

upload-job:
  stage: upload
  extends:
    - .shared_windows_runners
  script:
    - >
      curl.exe --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "./build/${ZIP_PACKAGE}" "${PACKAGE_REGISTRY_URL}/${ZIP_PACKAGE}"
